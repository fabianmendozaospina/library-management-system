@using LibraryManagementSystem.Model
@model Author

@{
    ViewData["Title"] = "Add New Author";
}

<h2>@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" method="post">
            <div class="mb-3">
                <label asp-for="FirstName" class="form-label">First Name</label>
                <input asp-for="FirstName" class="form-control" maxlength="30" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="LastName" class="form-label">Last Name</label>
                <input asp-for="LastName" class="form-control" maxlength="30" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="BirthDate" class="form-label">Birth Date</label>
                <input asp-for="BirthDate" class="form-control" type="date" />
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="DateOfDeath" class="form-label">Date Of Death</label>
                <input asp-for="DateOfDeath" class="form-control" type="date" />
                <span asp-validation-for="DateOfDeath" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Biography" class="form-label">Biography</label>
                <textarea asp-for="Biography" class="form-control" rows="5" maxlength="500"></textarea>
                <span asp-validation-for="Biography" class="text-danger"></span>
            </div>

            <p>
                <button type="button" class="btn btn-primary" onclick="addBook()">Add New Book</button>
            </p>

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Book</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="booksTableBody">
                    @if (Model?.BookAuthors != null && Model.BookAuthors.Any())
                    {
                        for (int i = 0; i < Model.BookAuthors.Count; i++)
                        {
                            <tr>
                                <td>
                                    <select asp-for="BookAuthors[i].BookId" class="form-select" asp-items="@(new SelectList(ViewBag.Books, "BookId", "Name"))">
                                        <option value="">-- Select Book --</option>
                                    </select>
                                    <span asp-validation-for="BookAuthors[i].BookId" class="text-danger"></span>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="deleteBook(this)">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <button type="submit" class="btn btn-primary">Save</button>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </form>

        @if (TempData["Error"] != null)
        {
            <div class="text-danger mt-3">@TempData["Error"]</div>
        }

        @section Scripts {
            <partial name="_ValidationScriptsPartial" />

            <script>
                var books = @Html.Raw(Json.Serialize(ViewBag.Books));
                var booksOptions = `<option value=''>-- Select Book --</option>` + books.map(e =>
                    `<option value="${e.bookId}">${e.name}</option>`
                ).join('');

                function addBook() {
                    var index = document.querySelectorAll('#booksTableBody tr').length;
                    var newRow = `<tr>
                        <td>
                            <select name="BookAuthors[${index}].BookId" class="form-select"
                                    data-val="true"
                                    data-val-required="Book is required">
                                ${booksOptions}
                            </select>
                            <span class="text-danger field-validation-valid"
                                  data-valmsg-for="BookAuthors[${index}].BookId"
                                  data-valmsg-replace="true"></span>
                        </td>
                        <td>
                            <input type="hidden" name="BookAuthors[${index}].BookId" value="0" />
                            <input type="hidden" name="BookAuthors[${index}].AuthorId" value="0" />
                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteBook(this)">Delete</button>
                        </td>
                    </tr>`;

                    document.querySelector('#booksTableBody').insertAdjacentHTML('beforeend', newRow);
                    $.validator.unobtrusive.parse('#booksTableBody');
                }

                function deleteBook(button) {
                    button.closest('tr').remove();
                }
            </script>
        }
    </div>
</div>